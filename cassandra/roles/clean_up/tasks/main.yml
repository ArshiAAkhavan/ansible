---
# tasks file for clean_up
- name: stop and deleting the directopries 
  block:
  - name: stoping the cassandra
    systemd:
      name: cassandra
      state: stopped
  - name: deleting the directories --> lib
    file:
      path: /var/lib/cassandra
      state: absent
  - name: deleting the directories --> log
    file:
      path: /var/log/cassandra
      state: absent
  - name: deleting the directories --> etc
    file:
      path: /etc/cassandra
      state: absent
  when: allow_clean_up=='true'

- name: uninstalling the cassandra for RHEL-based systems
  import_tasks: rhel.yml
  when: ansible_facts['os_family']|lower == 'redhat' and allow_clean_up=='true'
- name: uninstalling the cassandra for Debian-based systems
  import_tasks: debian.yml
  when: ansible_facts['os_family']|lower == 'debian' and allow_clean_up=='true'

- name: systemctl daemon-reload
  systemd:
    daemon_reload: yes






# - name: Get cassandra PID from remote host
#   ignore_errors: yes
#   shell: "ps -few | grep cassandra | awk '{print $2}'"
#   register: cassandra_PID
# - name: Kill cassandra
#   ignore_errors: yes
#   shell: "kill {{ item }}"
#   with_items: "{{ cassandra_PID.stdout_lines }}"
# - wait_for:
#     path: "/proc/{{ item }}/status"
#     state: absent
#   with_items: "{{ cassandra_PID.stdout_lines }}"
#   ignore_errors: yes
#   register: zombie_cassandra
# - name: Force kill stuck processes
#     shell: "kill -9 {{ item }}"
#     ignore_errors: yes
#     with_items: "{{ zombie_cassandra.results | select('failed') | map(attribute='item') | list }}"
